Index: src/SortArray.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.Arrays;\nimport java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.IOException;\npublic class SortArray {\n    private String path;\n    private int [] arr;\n    public SortArray(String path) {\n        this.path=path;\n        read_from_file();\n    }\n    public void read_from_file()\n    {\n        try {\n            FileReader fileReader = new FileReader(path);\n            BufferedReader bufferedReader = new BufferedReader(fileReader);\n            String line;\n            line = bufferedReader.readLine();\n            String[] strArray = line.split(\",\");\n            arr=new int[strArray.length];\n            for (int i = 0; i < strArray.length; i++) {\n                arr[i] = Integer.parseInt(strArray[i]);\n            }\n            bufferedReader.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n    public  int[] simpleSort(boolean returnIntermediate) {\n        int n = arr.length;\n        int[] sortedArr = Arrays.copyOf(arr, n);\n        int[][] intermediateArrays = new int[n - 1][n];\n          //bubble sort algorithm\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = 0; j < n - i - 1; j++) {\n                if (sortedArr[j] > sortedArr[j + 1]) {\n                    int temp = sortedArr[j];\n                    sortedArr[j] = sortedArr[j + 1];\n                    sortedArr[j + 1] = temp;\n                    intermediateArrays[i] = Arrays.copyOf(sortedArr, n);\n                }\n            }\n        }\n\n        if (returnIntermediate) {\n            for (int[] intermediateArray : intermediateArrays) {\n                System.out.println(Arrays.toString(intermediateArray));\n            }\n        }\n\n        return sortedArr;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/SortArray.java b/src/SortArray.java
--- a/src/SortArray.java	(revision 07242516ba022498a50c64d0d9895771fe1218d2)
+++ b/src/SortArray.java	(date 1684956779173)
@@ -1,23 +1,25 @@
-import java.util.Arrays;
 import java.io.BufferedReader;
 import java.io.FileReader;
 import java.io.IOException;
+import java.util.Arrays;
+
 public class SortArray {
     private String path;
-    private int [] arr;
+    private int[] arr;
+
     public SortArray(String path) {
-        this.path=path;
+        this.path = path;
         read_from_file();
     }
-    public void read_from_file()
-    {
+
+    public void read_from_file() {
         try {
             FileReader fileReader = new FileReader(path);
             BufferedReader bufferedReader = new BufferedReader(fileReader);
             String line;
             line = bufferedReader.readLine();
             String[] strArray = line.split(",");
-            arr=new int[strArray.length];
+            arr = new int[strArray.length];
             for (int i = 0; i < strArray.length; i++) {
                 arr[i] = Integer.parseInt(strArray[i]);
             }
@@ -26,11 +28,12 @@
             e.printStackTrace();
         }
     }
-    public  int[] simpleSort(boolean returnIntermediate) {
+
+    public int[] simpleSort(boolean returnIntermediate) {
         int n = arr.length;
         int[] sortedArr = Arrays.copyOf(arr, n);
         int[][] intermediateArrays = new int[n - 1][n];
-          //bubble sort algorithm
+        //bubble sort algorithm
         for (int i = 0; i < n - 1; i++) {
             for (int j = 0; j < n - i - 1; j++) {
                 if (sortedArr[j] > sortedArr[j + 1]) {
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"91a22561-522d-4f63-932b-cf635bbb3eed\" name=\"Changes\" comment=\"empty\">\n      <change afterPath=\"$PROJECT_DIR$/src/SortArray.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/test1.txt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Main.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"CodeStyleSettingsInfer\">\n    <option name=\"done\" value=\"true\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectCodeStyleSettingsMigration\">\n    <option name=\"version\" value=\"2\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2QFfZYoVAwGUk1GqIveeO5a5ROC\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\"\n  }\n}]]></component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"91a22561-522d-4f63-932b-cf635bbb3eed\" name=\"Changes\" comment=\"\" />\n      <created>1684954307625</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1684954307625</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"empty\">\n      <created>1684954560328</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1684954560328</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"2\" />\n    <servers />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\n    <MESSAGE value=\"empty\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"empty\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 07242516ba022498a50c64d0d9895771fe1218d2)
+++ b/.idea/workspace.xml	(date 1685039530829)
@@ -5,10 +5,8 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="91a22561-522d-4f63-932b-cf635bbb3eed" name="Changes" comment="empty">
-      <change afterPath="$PROJECT_DIR$/src/SortArray.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/test1.txt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/SortArray.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/SortArray.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -27,6 +25,7 @@
   </component>
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+    <option name="UPDATE_TYPE" value="REBASE" />
   </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
@@ -42,13 +41,14 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "ASKED_ADD_EXTERNAL_FILES": "true",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;master&quot;
   }
-}]]></component>
+}</component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
